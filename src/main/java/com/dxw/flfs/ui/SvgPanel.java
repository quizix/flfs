/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dxw.flfs.ui;

import java.io.File;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.batik.swing.JSVGCanvas;
import org.apache.batik.swing.gvt.GVTTreeRendererAdapter;
import org.apache.batik.swing.gvt.GVTTreeRendererEvent;
import org.apache.batik.swing.svg.GVTTreeBuilderAdapter;
import org.apache.batik.swing.svg.GVTTreeBuilderEvent;
import org.apache.batik.swing.svg.SVGDocumentLoaderAdapter;
import org.apache.batik.swing.svg.SVGDocumentLoaderEvent;

/**
 *
 * @author pronics3
 */
public class SvgPanel extends javax.swing.JPanel {
    private final JSVGCanvas canvas = new JSVGCanvas();
    /**
     * Creates new form SvgPanel
     */
    public SvgPanel() {
        initComponents();
        
        initSvg();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    private void initSvg() {
        canvas.setDocumentState(JSVGCanvas.ALWAYS_DYNAMIC);

        this.add("Center", canvas);

        // Set the JSVGCanvas listeners.
        canvas.addSVGDocumentLoaderListener(new SVGDocumentLoaderAdapter() {
            public void documentLoadingStarted(SVGDocumentLoaderEvent e) {
                //label.setText("Document Loading...");

            }

            public void documentLoadingCompleted(SVGDocumentLoaderEvent e) {
                //label.setText("Document Loaded.");
                /*SVGDocument document = e.getSVGDocument();

                Element ele = document.getElementById("xxx");

                ele.setTextContent("oh my god");*/

            }
        });

        canvas.addGVTTreeBuilderListener(new GVTTreeBuilderAdapter() {
            public void gvtBuildStarted(GVTTreeBuilderEvent e) {

                //label.setText("Build Started...");
            }

            public void gvtBuildCompleted(GVTTreeBuilderEvent e) {
                //label.setText("Build Done.");
//                frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
            }
        });
        canvas.addGVTTreeRendererListener(new GVTTreeRendererAdapter() {
            public void gvtRenderingPrepare(GVTTreeRendererEvent e) {
            }

            public void gvtRenderingCompleted(GVTTreeRendererEvent e) {
            }
        });
         try {
            File f = new File("f:\\flfs.svg");
            canvas.setURI(f.toURI().toString());

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
