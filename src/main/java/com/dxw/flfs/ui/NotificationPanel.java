/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dxw.flfs.ui;

import com.dxw.common.ms.Notification;
import com.dxw.common.ms.NotificationManager;
import com.dxw.common.services.Services;
import com.dxw.common.services.ServiceRegistry;
import com.dxw.common.services.ServiceRegistryImpl;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author pronics3
 */
public class NotificationPanel extends javax.swing.JPanel {

    /**
     * Creates new form NotificationPanel
     */
    public NotificationPanel() {
        initComponents();

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contextMenu = new javax.swing.JPopupMenu();
        javax.swing.JMenuItem menuItemClear = new javax.swing.JMenuItem();
        scrollPane = new javax.swing.JScrollPane();
        textPanel = new javax.swing.JTextPane();

        menuItemClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Clear-icon.png"))); // NOI18N
        menuItemClear.setText("清除");
        menuItemClear.setToolTipText("清除");
        menuItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemClearActionPerformed(evt);
            }
        });
        contextMenu.add(menuItemClear);

        setLayout(new java.awt.BorderLayout());

        textPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textPanelMousePressed(evt);
            }
        });
        scrollPane.setViewportView(textPanel);

        add(scrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemClearActionPerformed

    }//GEN-LAST:event_menuItemClearActionPerformed

    private void textPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textPanelMousePressed
        if( SwingUtilities.isRightMouseButton(evt)){
            this.contextMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_textPanelMousePressed

    private NotificationManager notificationManger;
    HTMLEditorKit kit;
    HTMLDocument doc;

    private void init() {
        kit = new HTMLEditorKit();
        //实例化一个HTMLEditorkit工具包，用来编辑和解析用来显示在jtextpane中的内容。  
        doc = (HTMLDocument) kit.createDefaultDocument();
        //使用HTMLEditorKit类的方法来创建一个文档类，HTMLEditorKit创建的类型默认为htmldocument。  
        this.textPanel.setEditorKit(kit);
        //设置jtextpane组件的编辑器工具包，是其支持html格式。  
        this.textPanel.setContentType("text/html");
        //设置编辑器要处理的文档内容类型，有text/html,text/rtf.text/plain三种类型。  
        this.textPanel.setDocument(doc);

        /*scrollPane.getVerticalScrollBar().addAdjustmentListener((AdjustmentEvent e) -> {
            e.getAdjustable().setValue(e.getAdjustable().getMaximum());
        });*/
        ServiceRegistry registry = ServiceRegistryImpl.getInstance();

        notificationManger = (NotificationManager) registry.lookupService(Services.NOTIFICATION_MANAGER);

        if (notificationManger != null) {
            notificationManger.addReceiver((String tag, Notification notification) -> {
                onNotify(tag, notification);
            });
        }
    }

    private void onNotify(String tag, Notification notification) {
        long when = notification.getWhen();

        String message = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss")
                .format(new Date(when));
        String m = String.format("[%s] %s %s", tag, message, notification.getContent().toString());
        addText(m);

    }

    private void addText(String text) {
        //kit.insertHTML(doc, HEIGHT, text, WIDTH, WIDTH, HTML.Tag.INPUT);
        try {
            //doc.insertAfterEnd(null, text);
            kit.insertHTML(doc, doc.getLength(), text, 0, 0, null);

        } catch (BadLocationException | IOException ex) {

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JPopupMenu contextMenu;
    javax.swing.JScrollPane scrollPane;
    javax.swing.JTextPane textPanel;
    // End of variables declaration//GEN-END:variables
}
